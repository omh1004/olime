<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lime.dao.ManageDao">

	<resultMap type="user" id="userMap">
		<id column="userId" property="userId" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="userType" property="userType" />
		<result column="rgtDate" property="rgtDate" />
		<result column="userType" property="userType" />
		<result column="blockDate" property="blockDate" />
		<result column="sum" property="sum" />
		<result column="gender" property="gender" />
		<result column="bankName" property="bankName" />
		<result column="num" property="num" />
		<result column="manner_score" property="mannerScore" />
		<result column="addr" property="region" />
		<result column="club_name" property="club" />
		<result column="lefty_yn" property="hand" />
		<result column="lv_name" property="level" />
		<result column="lv_id" property="lvId" />
	</resultMap>
	
 	 <resultMap type="field" id="fieldMap">
    <id column="fieldId" property="fieldId" />
    <result column="fieldId" property="fieldId" />
    <result column="name" property="name" />
    <result column="addr" property="addr" />
    <result column="courtName" property="courtName" />
    <result column="parkingYn" property="parkingYn" />
    <result column="indYnName" property="indYnName" />
    <result column="courtCnt" property="courtCnt" />
    <result column="lightYn" property="lightYn" />
    
  </resultMap>

	
	

		<select id="findAll" resultMap="userMap">
	    SELECT 
	      *
	    FROM 
	      (SELECT
	            row_number() over(order by tt.userId) AS num,
	            tt.userId userId,
	            tt.name name,
	            tt.email email,
	            tt.userType userType,
	            date_format(tt.rgtDate ,'%Y-%m-%d') rgtDate,
	            (case
	            when tt.sum IS null
	            then 0
	            ELSE tt.sum
	            end
	            ) sum,
	            tt.gender gender,
	            replace(tt.bankName,'\r','') bankName,
	            tt.acnt_no acntNo,
	            tt.acnt_holder acntHolder,
	            IFNULL(date_format(tt.block_date ,'%Y-%m-%d'),'기록 없음') blockDate
	      from
	            (SELECT
	            u.user_id userId,
	            u.name name,
	            u.email email,
	            (CASE
	            WHEN replace(u.user_type,'\r','') = 'U' THEN '유저'
	            WHEN replace(u.user_type,'\r','') = "M" THEN '매니저'
	            ELSE 'admin' END) userType,
	            u.rgt_date rgtDate ,
	            (SELECT
	            SUM(case
	            when
	            lc2.type_use = 'U'
	            then CONCAT('-',lc2.amt)
	            when lc2.type_use = 'C'
	            then CONCAT(lc2.amt)
	            ELSE lc2.amt
	            end)
	            FROM lime_cash lc2
	            WHERE lc2.user_id =u.user_id) SUM,
	            -- 성별, 은행명, 계좌번호, 예금주명, 제재
	            (SELECT
	            case
	            when
	            m2.gender = 'M'
	            then '남성'
	            ELSE '여성'
	            end
	            FROM member m2
	            WHERE m2.user_id = m.user_id
	            ) gender,
	            bi.name bankName,
	            m.acnt_no acnt_no
	            ,m.acnt_holder acnt_holder
	            ,m.block_date block_date
	            FROM user u
	            LEFT JOIN member m
	            ON u.user_id = m.user_id
	            left
	            JOIN bank_info bi
	            ON m.bank_id = bi.bank_id
	            left JOIN lime_cash lc
	            ON
	            m.user_id = lc.user_id
	            GROUP BY u.user_id
	            ) tt
	        WHERE 1=1
	        AND tt.userType = '유저' 
	        AND tt.gender IS NOT null
	        ) tt2
		</select>
		<select id="findManagerAll" resultMap="userMap">
	    SELECT 
	      *
	    FROM 
	      (SELECT
	            row_number() over(order by tt.userId) AS num,
	            tt.userId userId,
	            tt.name name,
	            tt.email email,
	            tt.userType userType,
	            date_format(tt.rgtDate ,'%Y-%m-%d') rgtDate,
	            (case
	            when tt.sum IS null
	            then 0
	            ELSE tt.sum
	            end
	            ) sum,
	            tt.gender gender,
	            replace(tt.bankName,'\r','') bankName,
	            tt.acnt_no acntNo,
	            tt.acnt_holder acntHolder,
	            IFNULL(date_format(tt.block_date ,'%Y-%m-%d'),'기록 없음') blockDate
	      from
	            (SELECT
	            u.user_id userId,
	            u.name name,
	            u.email email,
	            (CASE
	            WHEN replace(u.user_type,'\r','') = 'U' THEN '유저'
	            WHEN replace(u.user_type,'\r','') = "M" THEN '매니저'
	            ELSE 'admin' END) userType,
	            u.rgt_date rgtDate ,
	            (SELECT
	            SUM(case
	            when
	            lc2.type_use = 'U'
	            then CONCAT('-',lc2.amt)
	            when lc2.type_use = 'C'
	            then CONCAT(lc2.amt)
	            ELSE lc2.amt
	            end)
	            FROM lime_cash lc2
	            WHERE lc2.user_id =u.user_id) SUM,
	            -- 성별, 은행명, 계좌번호, 예금주명, 제재
	            (SELECT
	            case
	            when
	            m2.gender = 'M'
	            then '남성'
	            ELSE '여성'
	            end
	            FROM member m2
	            WHERE m2.user_id = m.user_id
	            ) gender,
	            bi.name bankName,
	            m.acnt_no acnt_no
	            ,m.acnt_holder acnt_holder
	            ,m.block_date block_date
	            FROM user u
	            LEFT JOIN member m
	            ON u.user_id = m.user_id
	            left
	            JOIN bank_info bi
	            ON m.bank_id = bi.bank_id
	            left JOIN lime_cash lc
	            ON
	            m.user_id = lc.user_id
	            GROUP BY u.user_id
	            ) tt
	        WHERE 1=1
	        AND tt.userType = '매니저'
	        ) tt2
		</select>
		
	 <select id="countUserAll" resultType="int">
    SELECT
         count(*)
    from
          (SELECT
          u.user_id userId,
          u.name name,
          u.email email,
          (CASE
          WHEN replace(u.user_type,'\r','') = 'U' THEN '유저'
          WHEN replace(u.user_type,'\r','') = "M" THEN '매니저'
          ELSE 'admin' END) userType,
          u.rgt_date rgtDate ,
          (SELECT
          SUM(case
          when
          lc2.type_use = 'U'
          then CONCAT('-',lc2.amt)
          when lc2.type_use = 'C'
          then CONCAT(lc2.amt)
          ELSE lc2.amt
          end)
          FROM lime_cash lc2
          WHERE lc2.user_id =u.user_id) SUM,
           성별, 은행명, 계좌번호, 예금주명, 제재
          (SELECT
          case
          when
          m2.gender = 'M'
          then '남성'
          ELSE '여성'
          end
          FROM member m2
          WHERE m2.user_id = m.user_id
          ) gender,
          bi.name bankName,
          m.acnt_no acnt_no
          ,m.acnt_holder acnt_holder
          ,m.block_date block_date
          FROM user u
          LEFT JOIN member m
          ON u.user_id = m.user_id
          left
          JOIN bank_info bi
          ON m.bank_id = bi.bank_id
          left JOIN lime_cash lc
          ON
          m.user_id = lc.user_id
          GROUP BY u.user_id
          ) tt
      WHERE tt.userType = '유저'
  </select>
	
	
	
	<select id="findByNo" resultMap="userMap" parameterType="int">
SELECT
          tt.userId userId,
          tt.name name,
          tt.email email,
          tt.userType userType,
          date_format(tt.rgtDate ,'%Y-%m-%d') rgtDate,
          (case
          when tt.sum IS null
          then 0
          ELSE tt.sum
          end
          ) sum,
          tt.gender gender,
          replace(tt.bankName,'\r','') bankName,
          tt.acnt_no acntNo,
          tt.acnt_holder acntHolder,
          tt.manner_score,          
          CONCAT(r_region_name,' ' ,c_city_name ) addr,          
          c_city_name,
          r_region_name,          
          club_name,
          lv_name,
          lv_id,
          (
             case
                when m_lefty_yn = 'Y'
                   then '왼손잡이'
                ELSE 
                   '오른손잡이'
             end      
          ) lefty_yn,
          IFNULL(date_format(tt.block_date ,'%Y-%m-%d.'),'기록 없음') blockDate
    from
          (SELECT
             u.user_id userId,
             u.name name,
             u.email email,
             (CASE
             WHEN replace(u.user_type,'\r','') = "U" THEN '유저'
             WHEN replace(u.user_type,'\r','') = "M" THEN '매니저'
             ELSE 'admin' END) userType,
             u.rgt_date rgtDate ,
             (SELECT
             SUM(case
             when
             lc2.type_use = 'U'
             then CONCAT('-',lc2.amt)
             when lc2.type_use = 'C'
             then CONCAT(lc2.amt)
             ELSE lc2.amt
             END)
          FROM lime_cash lc2
          WHERE lc2.user_id =u.user_id) SUM,
          -- 성별, 은행명, 계좌번호, 예금주명, 제재
          (SELECT
          case
          when
          m2.gender = 'M'
          then '남성'
          ELSE '여성'
          end
          FROM member m2
          WHERE m2.user_id = m.user_id
          ) gender,
          bi.name bankName,
          m.acnt_no acnt_no
          ,m.acnt_holder acnt_holder
          ,m.block_date block_date
          ,m.manner_score
          ,m.city_id m_city_id
          ,r1.region_name r_region_name
          ,club1.name club_name
          ,lv2.lv_name lv_name
          ,m.lv_id
          ,m.lefty_yn m_lefty_yn
          ,c2.city_name c_city_name
          FROM user u
          LEFT JOIN member m
          ON u.user_id = m.user_id
          left JOIN bank_info bi
          ON m.bank_id = bi.bank_id
          left JOIN lime_cash lc
          ON m.user_id = lc.user_id
          LEFT JOIN city c2 
          ON m.city_id = c2.city_id
          LEFT JOIN region r1
          ON c2.region_id = r1.region_id
          left JOIN club club1
          ON m.club_id = club1.club_id
          left JOIN lv lv2
          ON m.lv_id = lv2.lv_id
          GROUP BY u.user_id
          ) tt
    WHERE tt.userType = '유저'
    AND userId = #{no}
	</select>
	
	<select id="findFieldAll" resultMap="fieldMap">
		SELECT  
					  f.field_id fieldId,
					  f.name name,
					  f.addr addr,
					  (case
					    when ct.name = 'H'
					      then '하드코트'
					          when ct.name = 'C'
					      then '클레이코트'
					          when ct.name = 'G'
					      then '잔디코트'
					      
					      else '앙투라코트'
					  end) courtName,
					  (case
					    when f.parking_area = 0 
					      then '불가'
					    ELSE '가능'
					  END) parkingYn,
					  (CASE
					    when ind_yn = 0
					      then '실외'
					    ELSE '실내'
					  END) indYnName,
					  (CASE
					    WHEN light_yn =0
					      then '무'
					      ELSE '유'
					  END) lightYn,
					  f.court_cnt courtCnt    
		FROM field f
					left JOIN court c
					ON f.field_id = c.field_id
					left JOIN court_type ct
					ON c.court_type_id = ct.court_type_id
					GROUP BY f.field_id
	</select>
	
	<select id="findFieldByNo" parameterType="int" resultMap="fieldMap">	 
		SELECT  
					  f.field_id fieldId,
					  f.name fName, -- 구장명,
					  f.addr addr,-- 구장주소,
					  (case
					    when ct.name = 'H'
					      then '하드코트'
					          when ct.name = 'C'
					      then '클레이코트'
					          when ct.name = 'G'
					      then '잔디코트'
					      
					      else '앙투라코트'
					  end) courtType,
					  c.fee fee,-- 이용요금,
					  f.court_cnt, 
					  (case
					    when f.parkingAvt = 0 
					      then '불가'
					    ELSE '가능'
					  END) parkingArea,  -- 주차가능여부,
					  (CASE
					    when ind_yn = 0
					      then '실외'
					    ELSE '실내'
					  END) indYn , 
					  (CASE
					    WHEN light_yn =0
					      then '무'
					      ELSE '유'
					  END) lightYn,
					  f.court_cnt courtCnt
		FROM field f
					left JOIN court c
					ON f.field_id = c.field_id
					left JOIN court_type ct
					ON c.court_type_id = ct.court_type_id
					GROUP BY f.field_id
					HAVING f.field_id =#{no}
	</select>	
</mapper>








