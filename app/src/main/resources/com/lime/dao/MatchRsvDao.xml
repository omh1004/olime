<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lime.dao.MatchRsvDao">

    <resultMap type="matchRsv" id="matchRsvMap">
        <id column="mtch_id" property="matchId"/>
        <result column="state" property="state"/>
        <result column="date" property="date"/>
        <result column="lime_id" property="limeId"/>
        <result column="rating_list" property="ratingList"/>
        <result column="team" property="team"/>
        <result column="rating_score" property="ratingScore"/>
        <result column="avg_level" property="averageLevel"/>

        <collection property="users" ofType="user">
            <id column="user_id" property="userId"/>
            <result column="name" property="name"/>
            <result column="gender" property="gender"/>
            <result column="manner_score" property="mannerScore"/>
            <result column="lv_id" property="lvId"/>
        </collection>
    </resultMap>

    <select id="countAll" resultType="int">
        SELECT count(*)
        FROM   social_mtch_rsv
    </select>

    <select id="findAll" resultMap="matchRsvMap">
        SELECT   mtch_id,
                 user_id,
                 lime_id,
                 state
        FROM     social_mtch_rsv
        ORDER BY mtch_id ASC
    </select>

    <insert id="insert" parameterType="MatchRsv">
        INSERT INTO social_mtch_rsv(mtch_id, user_id, lime_id, state)
        VALUES      (#{matchRsv.matchId}, #{matchRsv.userId}, #{limeId}, #{matchRsv.state})
    </insert>

    <select id="countByMatchId" resultType="int" parameterType="int">
        SELECT count(*)
        FROM   social_mtch_rsv
        WHERE  mtch_id = #{matchId}
        AND    state = "P";
    </select>

    <select id="findByUserId" resultMap="matchRsvMap">
        SELECT          smr.mtch_id,
                        smr.user_id,
                        smr.lime_id,
                        smr.state,
                        lc.date
        FROM            social_mtch_rsv smr
        LEFT OUTER JOIN lime_cash lc
        ON              smr.lime_id = lc.lime_id
        WHERE           smr.user_id = #{userId}
        ORDER BY        smr.mtch_id ASC
    </select>

    <select id="getAverageLevel" resultMap="matchRsvMap">
        SELECT          smr.mtch_id,
                        smr.user_id,
                        smr.lime_id,
                        smr.state,
                        ROUND(AVG(m.lv_id)) avg_level
        FROM            social_mtch_rsv smr
        LEFT OUTER JOIN member m
        ON              smr.user_id = m.user_id
        WHERE           smr.mtch_id = #{matchId}
        ORDER BY        smr.user_id ASC;
    </select>

    <select id="findByMatchIdAndUserId" resultMap="matchRsvMap">
        SELECT          smr.mtch_id,
                        smr.user_id,
                        smr.lime_id,
                        smr.state,
                        lc.date
        FROM            social_mtch_rsv smr
        LEFT OUTER JOIN lime_cash lc
        ON              smr.lime_id = lc.lime_id
        WHERE           smr.user_id = #{userId}
        AND             smr.mtch_id = #{matchId}
        ORDER BY        smr.mtch_id ASC
    </select>

    <select id="findUsers" resultMap="matchRsvMap" parameterType="int">
        SELECT    smr.mtch_id,
                  smr.state,
                  smr.user_id,
                  u.name,
                  m.gender,
                  m.manner_score,
                  m.lv_id
        FROM      social_mtch_rsv smr
        LEFT JOIN `user` u on u.user_id = smr.user_id
        LEFT JOIN `member` m on m.user_id = smr.user_id
        WHERE     smr.mtch_id = #{matchId}
    </select>

<!--    <update id="updateTeam" parameterType="matchRsv">-->
<!--        UPDATE social_mtch_rsv-->
<!--        SET    team=#{team}-->
<!--        WHERE  mtch_id=#{matchId}-->
<!--        AND    user_id=#{userId}-->
<!--    </update>-->

<!--    <update id="updateScore" parameterType="matchRsv">-->
<!--        UPDATE social_mtch_rsv smr-->
<!--        SET    smr.rating_list=CONCAT(#{normalPoint},',',#{matchPoint}),-->
<!--               smr.rating_score=(SELECT sum(rl.score)-->
<!--                                 FROM   rating_list rl-->
<!--                                 WHERE  rl.rating_list_id=#{normalPoint}-->
<!--                                    OR     rl.rating_list_id=#{matchPoint})-->
<!--        WHERE  smr.mtch_id=#{matchId}-->
<!--          AND    smr.user_id=#{userId}-->
<!--    </update>-->

</mapper>